import jif.runtime.Runtime;
import java.io.PrintStream;

class C[label L, label M] extends D[{L;M}] {
    int{L} f = 6;
    int{M} g = 6;

}

class D[label N] {
}

class Params17 {
    public static void main{}(principal{} pp, String[]{} args)
        throws (SecurityException) {
        Runtime[pp] runtime = Runtime[pp].getRuntime();
	PrintStream[{pp:;_!:_}] out = null;
        try {
            out = runtime.out();
	    
	    C[{Alice:}, {Bob:}] foo = null;
	    D[{Alice:;Bob:}] o = foo; // upcast ok
	    
	    C[{Bob:}, {Alice:}] that = (C[{Bob:}, {Alice:}])o; // will throw class cast
	    foo.f = that.g; // bad! would leak...
	    
	    out.println("failure! classcastexception not thrown.");
	}
        catch (NullPointerException ignored) { }
	catch (ClassCastException e) {
            if (out != null) out.println("success! classcastexception thrown.");
	}
    }
}
