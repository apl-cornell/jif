public class LabelParam {
    LabelParam(label{this} lbl_, Obj[lbl_]{this} obj_) {
        this.lbl = lbl_;
        this.obj = obj_;
    }
    final label{this} lbl;
    final Obj[this.lbl]{this} obj;
}

class Obj[covariant label colbl] {
    Obj(label{colbl} inlbl_) {
        this.inlbl = inlbl_;
    }
    final label{colbl} inlbl;
}

class Test {
    final LabelParam{this} copy;
    label{} lb;
    Test(LabelParam{this} param) {
        this.copy = param;
    }
    public void foo{}() {
        try {
            if(this.copy.obj.inlbl <= this.copy.lbl) {
                bar();
            } 
        } catch (NullPointerException whocares) {}
    }
    
    void bar()
        where this.copy.obj.inlbl <= this.copy.lbl
    {
        
    }
}