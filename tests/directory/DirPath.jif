// A DirPath represents a unix-style path

class DirPath[label L] {
	String{L} [] {L} components;

	// Create a DirPath from a String in which pathname components are delimited by slashes.
	// The path is always absolute, even if it doesn't start with a slash.
	DirPath{L}(String{L} path) {
		// Would be handy to have a signature for StringTokenizer...
		try {
	    int i = 0;
		int c = 0;
		while (i < path.length()) {
			while (path.charAt(i) == '/' && i < path.length()) i++;
			if (i < path.length()) {
				c++;
				while (path.charAt(i) != '/' && i < path.length()) i++;
			}
		}
		components = new String[c];
		c = 0;
		while (i < path.length()) {
			while (path.charAt(i) == '/' && i < path.length()) i++;
			if (i < path.length()) {
				int j=i;
				while (path.charAt(i) != '/' && i < path.length()) j++;
				components[c] = path.substring(i, j-i);
				c++;
			}
		}
		} catch (RuntimeException e) {}
	}
}
// vim: ts=4 sw=4
