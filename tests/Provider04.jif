//This class compiles with provider => Bob and fails otherwise
public class Provider04[principal P] authority(P) where provider actsfor P {
	boolean{_->} m{P->}(boolean{P->}x) where caller(P)
	{
		return declassify(x, {P->} to {_->});	
	}

}

class Provider04_5 authority(Bob) where provider actsfor Bob, {*Provider04.provider} actsfor Bob {
	boolean{_->} p{Bob->}() throws (NullPointerException{Bob->}) where authority(Bob) {
		boolean foo = true;
		Provider04[Bob] p = new Provider04[Bob]();
		//FYI, inference engine fails if the above line is:
		//Provider04 p = new Provider04[Bob]();
		return p.m(foo);	
	}
}
