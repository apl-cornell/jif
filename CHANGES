Jif Change Log
==============

This file documents changes between releases of Jif.

2006-05-29    Jif 3.0.0
    * Added integrity
       * See the Jif manual for a full explanation.
       * Labels now form a complete lattice (meet operation supported).
       * Top and bottom principals now explicitly represented.
    * Optional checking for robustness
       * See the Jif manual for a full explanation.
       * Label checking rules to enforce robustness for downgrading
         can be turned on using the "-robust" command line option.
    * More flexible syntax for labels.
       * See the Jif manual for a full explanation.
       * UTF-8 encoded source files accepted
       * A reader policy "p:q" can also be written "p->q" or "p$A!z(Bq" (Unicode character )
       * A reader policy "p<-q" can also be written "p->q" or "p$A!{(Bq" (Unicode character )
       
robustness
 - syntax for policies, incl UTF-8 encoding

conjunctive and disjunctive principals

modification to downgrade syntax i.e. declassify(e, L to L')

actsfor and label tests may be used as arbitrary boolean expressions. if used as a conjunct of an if-statement, they will update the label env of the consequent

expanded manual

equiv for where constraints and label and principal tests

hashmap and hashset implementations

script for producing statistics on Jif code. Use $JIF/bin/jc, and the "-report time=1" flag to generate info on the number of downgrades, number of annotations, etc.

bug fixes


2006-03-13    Jif 2.0.1
    * Numerous bug fixes.
    * Label less-than-or-equal constraints for methods.
    * Map implementation in jif.util library.
    * Simple runtime class analysis removes the need to statically handle 
            some spurious ClassCastExceptions
    * jif.lang.IDComparable interface now with additional method
            equals(label lbl, IDComparable[lbl] o)
        
2005-08-26    Jif 2.0.0
    * Class parameters now represented at runtime.
    * Dynamic labels and principals more expressive: now allow access paths.
    * Allow user-defined principals.
    * Not-null checking more precise.
    * Better documentation.
    * Based on the Polyglot 2.0.0 architecture.

2004-10-04    Jif 1.1.1
    * Based on the Polyglot 1.3.0 architecture
    * Now includes required Polyglot jar files in the distribution
    
2004-04-13    Jif 1.1.0
    * Based on the Polyglot 1.2.0 architecture.
    * Improved error messages.
    * New command line option to the Jif compiler: "-explain" (or "-e") 
      makes the compiler provide more information about why label checking 
      failed.      
    * The signature for the "public static void main" method for Jif 
      programs can now optionally include a dynamic principal, who is the 
      current user. See the file examples/README in the distribution for 
      more information.
    * Misc bug fixes, including:
          * The label "this" cannot be used in a static context.
          * Incorrect labels missing colons (e.g., {Alice}") are detected.
          * Parameterized classes cannot be subclasses of 
            "java.lang.Throwable".
          * Final local variables require an initializer.
          * Implementation of acts for corrected.

2003-07-11    Jif 1.0.0
    * Based on the Polyglot 1.0.0 architecture.
    * Bounded label parameters
    * Non-null analysis to remove spurious exceptions
    * New example program: Battleship 

2001-09-06    Jif 0.9.2
    * Fixed a bug with loading external principals.
    * Fixed a bug with label checking loop statements.
    * Fixed serialization bug with jltools.util.Enum.
    * Installation procedure simplified.
    * Fixed Jif runtime interface.

2001-08-08    Jif 0.9.0
    * Fixed many bugs with label/principal parameters and dynamic labels.
    * Improved error reporting.
    * Added Jif runtime, which provides the ability to read and write files.
    * Added a utility to convert local users to Jif external principals.

2001-06-08    Jif 0.8.0
    * Many bug fixes with porting Jif to JLTools 0.9.0.

2001-05-16    Jif 0.7.0 (JLTools 0.9.0)
    * JLTools completely rewritten.
