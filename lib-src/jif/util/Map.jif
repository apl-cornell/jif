package jif.util;
/*
 * Jif Signature for the Map interface
 *
 */
public interface Map[label K, label V] extends JifObject[{K;V}] {
    // Query Operations

    int{K} size();

    boolean{K} isEmpty();

    boolean{K;key} containsKey(JifObject[K] key);

    boolean{V;value} containsValue(JifObject[V] value);

    JifObject[V]{V; key} get(JifObject[K] key);

    // Modifying Operations
    JifObject[V]{V} put{K;V}(JifObject[K]{K} key, JifObject[V]{V} value);
    JifObject[V]{V} remove{K;V}(JifObject[K]{K} key);

    void putAll{K;V}(Map[K,V] t);
    void clear{K;V}();

    // Views
    Set[K] keySet();
    Collection[V] values();

    // Removed, since this uses an inner class
    Set[K] entrySet(); // Set[K] ?
}
