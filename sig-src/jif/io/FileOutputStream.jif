/*
 * This Jif class provides a wrapper for the corresponding Java io class.
 * This is necessitated by the label parameters, which require a runtime representation.
 *
 */
package jif.io;
import java.io.FileDescriptor;
import java.io.IOException;

public class FileOutputStream[label L] extends OutputStream[L]
{
    private FileOutputStream() {}
    public native void write{L}(int{L} b) throws (IOException{L});
    private native void writeBytes{L}(byte{L}[]{L} b, int{L} off, int{L} len) throws (IOException{L});
    public native void write{L}(byte{L}[]{L} b) throws (IOException);
    public native void write{L}(byte{L}[]{L} b, int{L} off, int{L} len) throws (IOException{L});
    public native void close{L}() throws (IOException{L});
    public final native FileDescriptor{L} getFD()  throws (IOException{L});
}
