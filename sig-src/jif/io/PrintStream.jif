/*
 * This Jif class provides a wrapper for the corresponding Java io class.
 * This is necessitated by the label parameters, which require a runtime representation.
 *
 */
package jif.io;
import java.io.*;

public class PrintStream[label L] extends FilterOutputStream[L] {
    public PrintStream(OutputStream[L] out) {
		this(out, false);
    }
    public PrintStream(OutputStream[L] out, boolean{L} autoFlush) {
		super(out);
    }

    public native boolean{L} checkError();
    public native void print{L}(boolean{L} b);
    public native void print{L}(char{L} c);
    public native void print{L}(int{L} i);
    public native void print{L}(long{L} l);
    public native void print{L}(float{L} f);
    public native void print{L}(double{L} d);
    public native void print{L}(char{L}[]{L} s);
    public native void print{L}(String{L} s);
    public native void print{L}(Object{L} obj);
    public native void println{L}();
    public native void println{L}(boolean{L} x);
    public native void println{L}(char{L} x);
    public native void println{L}(int{L} x);
    public native void println{L}(long{L} x);
    public native void println{L}(float{L} x);
    public native void println{L}(double{L} x);
    public native void println{L}(char{L}[]{L} x);
    public native void println{L}(String{L} x);
    public native void println{L}(Object{L} x);
}
