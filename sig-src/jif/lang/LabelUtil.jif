package jif.lang;

/**
 * Utility methods for labels.
 */
public class LabelUtil {
    public static native label noComponents();

    public static native label{owner; readers; *lbl; lbl} 
       readerPolicyLabel(label lbl, principal owner, principal{*lbl}[] readers);
    public static native label{owner; writers; *lbl; lbl} 
       writerPolicyLabel(label lbl, principal owner, principal{*lbl}[] writers);
       
    public static native ConfPolicy{owner; readers; *lbl; lbl} 
       readerPolicy(label lbl, principal owner, principal{*lbl}[] readers);
       
    public static native IntegPolicy{owner; writers; *lbl; lbl} 
       writerPolicy(label lbl, principal owner, principal{*lbl}[] writers);
       
    public static native label toLabel(ConfPolicy cPolicy, IntegPolicy iPolicy);
       
    public static native label join(label l1, label l2);
    public static native label meetLbl(label l1, label l2); // "meet" is a keyword, and can't be used
    
    public static native ConfPolicy join(ConfPolicy p1, ConfPolicy p2);
    public static native ConfPolicy meetPol(ConfPolicy p1, ConfPolicy p2);

    public static native IntegPolicy join(IntegPolicy p1, IntegPolicy p2);
    public static native IntegPolicy meetPol(IntegPolicy p1, IntegPolicy p2);

    public static native boolean equivalentTo(label l1, label l2);
    public static native boolean relabelsTo(label fromLbl, label toLbl); 

    public static native boolean isReadableBy(label lbl, principal p); 
    
    public static native String stringValue(label lb); 
    public static native String toString(label lb);
    public static native int hashCode(label lb);
}
