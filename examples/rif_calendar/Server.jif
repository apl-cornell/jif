public class Server {

	private rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} calList;

	public Server() {
		this.calList = new rifList[{rif[q0*:{_}];rifi[q1*:{}]}]();
	}

	public Calendar[O,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} createCalendar
	{rif[q0*:{_}];rifi[q1*:{}]}(principal{rif[q0*:{_}];rifi[q1*:{}]} O, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld){
		Calendar[O,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal = new Calendar[O, ls, ld]();
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} cl = this.calList;
		if (cl == null) return null;
		cl.add(cal, new label {rif[q0*:{_}];rifi[q1*:{}]}, ls, ld, O);
 		return cal;
	}

	public void addEvent {rif[q0*:{_}];rifi[q1*:{}]}
		(Calendar[O,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, Event[ls,ld,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls} e, 
		principal{rif[q0*:{_}];rifi[q1*:{}]} O, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld){
		if (cal != null) cal.addEvent(e,ls,ld);
	}


	//used for confidentiality downgrade
	public boolean{rif[q0*:{_}];rifi[q1*:{}]} checkConflict {rif[q0*:{_}];rifi[q1*:{}]}
	(Calendar[o2,ls2,ld2]{rif[q0*:{_}];rifi[q1*:{}]} cal2, Event[ls1,ld1,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls1} se,
	label{rif[q0*:{_}];rifi[q1*:{}]} ls1, label{rif[q0*:{_}];rifi[q1*:{}]} ld1, principal{rif[q0*:{_}];rifi[q1*:{}]} o2,
	label{rif[q0*:{_}];rifi[q1*:{}]} ls2, label{rif[q0*:{_}];rifi[q1*:{}]} ld2) 
	{
		boolean{rif[q0*:{_}];rifi[q1*:{}]} result=false;
		try{
		if (new label tr(ls1,f3) <= new label {rif[q0*:{_}];rifi[q1*:{}]} &&
			new label tr(ls2,f3) <= new label {rif[q0*:{_}];rifi[q1*:{}]}){
			if (reclassify(cal2.rejectOnConflict(se,ls1,ld1),f3)) result=true;
		}
		}catch (NullPointerException impossible) {}
		return result;
	}

	
	public Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls2} requestSharedEvent
	{rif[q0*:{_}];rifi[q1*:{}]}(Calendar[o1,ls1,ld1]{rif[q0*:{_}];rifi[q1*:{}]} cal1, 
	Calendar[o2,ls2,ld2]{rif[q0*:{_}];rifi[q1*:{}]} cal2, Event[ls1,ld1,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls1} se,
	principal{rif[q0*:{_}];rifi[q1*:{}]} o1, principal{rif[q0*:{_}];rifi[q1*:{}]} o2,
	label{rif[q0*:{_}];rifi[q1*:{}]} ls1, label{rif[q0*:{_}];rifi[q1*:{}]} ld1,
	label{rif[q0*:{_}];rifi[q1*:{}]} ls2, label{rif[q0*:{_}];rifi[q1*:{}]} ld2,
	int{rif[q0*:{_}];rifi[q1*:{}]} bond
	) where tr(ls1,f9)<=ls2, tr(ld1,f9)<=ld2, tr(tr(ls1,f9),f9)<=tr(ls1,f9), tr(ls1,f9)<=ld2, tr(ls1,f9)<={rif[q0*:{_}];rifi[q1*:{}]},
		tr(ls2,f9)<={rif[q0*:{_}];rifi[q1*:{}]}
	{
		Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls2} ne = null;
		Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls2},f9)} dne = null;
		try{
		if (checkConflict(cal2,se,ls1,ld1,o2,ls2,ld2)) return null;
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} sharedBetween1 = new rifList[{rif[q0*:{_}];rifi[q1*:{}]}]();
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} sharedBetween2 = new rifList[{rif[q0*:{_}];rifi[q1*:{}]}]();
		sharedBetween1.add((Object)o1, new label {*ld1});  sharedBetween1.add((Object)o2, new label {*ld1});
		sharedBetween2.add((Object)o1, new label {*ld2});  sharedBetween2.add((Object)o2, new label {*ld2});
		Event[ls1,ld1,{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls1},f9)} e = reclassify(se,f9);
		e.setBond(bond);
		e.setSharedBetween(sharedBetween1);
		cal1.addRequestEvent(e);
		Date[ls1]{tr({*ls1},f9)} d= reclassify(e.getDate(),f9);
		Date[ls2]{*ls2} date = 
				new Date[ls2](reclassify(d.getDay(),f9),reclassify(d.getMonth(),f9), reclassify(d.getYear(),f9));
		TimeOfDay[ls1]{tr({*ls1},f9)} t = reclassify(e.getTime(),f9);
		TimeOfDay[ls2]{*ls2} time = 
				new TimeOfDay[ls2](reclassify(t.getHour(),f9),reclassify(t.getMinute(),f9));
		ne = new Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}](
				date, time, 
				reclassify(e.getDuration(),f9), 
				reclassify(e.getDescription(),f9), reclassify(e.getCreatorCalNode(),f9),
				reclassify(e.getCreatorCal(),f9),reclassify(e.getCreator(),f9));
		dne = reclassify(ne,f9);
		dne.setBond(bond);
		dne.setSharedBetween(sharedBetween2);
		cal2.addPendingEvent(dne);
		}catch (NullPointerException impossible) {}
		return dne;
	}

	//used for integrity downgrade
	public void acceptSharedEvent {rif[q0*:{_}];rifi[q1*:{}]}
	(Calendar[o2,ls2,ld2]{rif[q0*:{_}];rifi[q1*:{}]} cal2, Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls2} e,
		principal{rif[q0*:{_}];rifi[q1*:{}]} o2,label{rif[q0*:{_}];rifi[q1*:{}]} ls2, label{rif[q0*:{_}];rifi[q1*:{}]} ld2)
	where tr(ls2,f9)<={rif[q0*:{_}];rifi[q1*:{}]}, ls2<=ld2
	{
		try{
		Event[ls2,ld2,{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls2},f9)} se = reclassify(e,f9);
		Node[{rif[q0*:{_}];rifi[q1*:{}]}]{{rif[q0*:{_}];rifi[q1*:{}]}} n1 = reclassify(se.getCreatorCalNode(),f9);
		final label ls1 = n1.Lb;
		final label ld1 = n1.Lc;
		final principal{rif[q0*:{_}];rifi[q1*:{}]} o1 = reclassify(se.getCreator(),f9);
		try{
		Calendar[o1,ls1,ld1] cal1 = (Calendar[o1,ls1,ld1]) reclassify(se.getCreatorCal(),f9);
		cal2.acceptPendingEvent(e);
		int{rif[q0*:{_}];rifi[q1*:{}]} bond= reclassify(se.getBond(),f9);
		Event[ls1,ld1,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls1} e1 = cal1.findRequestedEvent(bond);
		if (cal1 != null && new label tr(ls1,f9) <= new label {rif[q0*:{_}];rifi[q1*:{}]}) cal1.requestedEventAccepted(e1);
		}catch (ClassCastException impossible) { }
		}catch (NullPointerException impossible) {}
	}


	//used for integrity upgrade
	public void cancelEvent {rif[q0*:{_}];rifi[q1*:{}]}
		(Calendar[o,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, 
		int {rif[q0*:{_}];rifi[q1*:{}]} bond1,
		principal{rif[q0*:{_}];rifi[q1*:{}]} o,label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld)
		where tr(tr(ls,f7),f9)<={rif[q0*:{_}];rifi[q1*:{}]}, tr(ls,f9)<={rif[q0*:{_}];rifi[q1*:{}]}, tr(tr(ld,f7),f9)<={rif[q0*:{_}];rifi[q1*:{}]}
	{
		try{
		Event[{tr({*ls},f7)},{tr({*ld},f7)},{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls},f7)} e = cal.findAcceptedEvent(bond1);
		Event[{tr({*ls},f7)},{tr({*ld},f7)},{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} se = reclassify(e,f9);
		int{rif[q0*:{_}];rifi[q1*:{}]} bond= reclassify(se.getBond(),f9);
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ld},f7)} l = cal.cancelEvent(e);
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} dl = reclassify(l,f9);
		rifList[{rif[q0*:{_}];rifi[q1*:{}]}]{rif[q0*:{_}];rifi[q1*:{}]} cl = this.calList;
		int{rif[q0*:{_}];rifi[q1*:{}]} size=cl.getSize();
		int{rif[q0*:{_}];rifi[q1*:{}]} i;
		int li;
		int lsize= dl.getSize();
		Node[{rif[q0*:{_}];rifi[q1*:{}]}] ln = dl.getHead();
		for (li=0;li<lsize;li++) {	
			final Node[{rif[q0*:{_}];rifi[q1*:{}]}] lnd = ln;			
			if (lnd!= null && new label tr(lnd.La,f9) <= new label {rif[q0*:{_}];rifi[q1*:{}]}){
				try{
				jif.lang.Principal{rif[q0*:{_}];rifi[q1*:{}]} s= (jif.lang.Principal) reclassify(lnd.getData(),f9);
				if (s != null && !s.equals(o)){
					Node[{rif[q0*:{_}];rifi[q1*:{}]}] n = cl.getHead();
					for (i=0;i<size;i++) {						
						final Node[{rif[q0*:{_}];rifi[q1*:{}]}] nd = n;
						if (nd != null && nd.La <= new label {rif[q0*:{_}];rifi[q1*:{}]}){
							try{
							final label ls2 = nd.Lb;
							final label ld2 = nd.Lc;
							final jif.lang.Principal o2 = nd.O;
							Calendar[o2,ls2,ld2]{rif[q0*:{_}];rifi[q1*:{}]} cal2= (Calendar[o2,ls2,ld2]) nd.getData();
							if(cal2!=null){
								if (o2 != null && o2.equals(s) && new label tr(tr(ls2,f7),f9) <= new label {rif[q0*:{_}];rifi[q1*:{}]}){
									Event[{tr({*ls2},f7)},{tr({*ld2},f7)},{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls2},f7)} e2 = cal2.findAcceptedEvent(bond);
									cal2.cancelEvent(e2);
								}
							}
							}catch (ClassCastException e1) { throw new Error("ClassCastException 1 !"); }
						} 
						n=n.getNext();						
					} 
				}
				}catch (ClassCastException e2) {throw new Error("ClassCastException 2 !"); }
			}
			ln=ln.getNext();			
		}
        }catch (NullPointerException e3) {throw new Error("NullPointerException 3 !");}

	}

	public String{rif[q0*:{_}];rifi[q1*:{}]} printCalendar{rif[q0*:{_}];rifi[q1*:{}]}
		(Calendar[o,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, 
		principal{rif[q0*:{_}];rifi[q1*:{}]} o, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld){
		return cal!=null?cal.toString():null;
	}


	//used for confidentiality downgrade
	public Event[{tr({*ls},f1)},ld,{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls},f1)} publicizeSlot{rif[q0*:{_}];rifi[q1*:{}]}
	(Calendar[o,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, Event[ls,ld,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls} e,
	principal{rif[q0*:{_}];rifi[q1*:{}]} o, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld)
	where tr(ls,f9)<={rif[q0*:{_}];rifi[q1*:{}]}
	{
		if (cal != null) return cal.publicizeSlot(e);
		else return null;
	}

	//used for confidentiality upgrade
	public Event[ls,ld,{rif[q0*:{_}];rifi[q1*:{}]}]{*ls} hideSlot{rif[q0*:{_}];rifi[q1*:{}]}
	(Calendar[o,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, Event[{tr({*ls},f1)},ld,{rif[q0*:{_}];rifi[q1*:{}]}]{tr({*ls},f1)} e,
	principal{rif[q0*:{_}];rifi[q1*:{}]} o, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld)
	where tr(tr(ls,f1),f9)<={rif[q0*:{_}];rifi[q1*:{}]}, tr(tr(ls,f1),f2)<=ls, tr(ls,f2)<=ls, ls<=ld
	{
		if (cal != null) return cal.hideSlot(e);
		else return null;
	}

	public String{rif[q0*:{_}];rifi[q1*:{}]} takePubView{rif[q0*:{_}];rifi[q1*:{}]}
		(Calendar[o,ls,ld]{rif[q0*:{_}];rifi[q1*:{}]} cal, 
		principal{rif[q0*:{_}];rifi[q1*:{}]} o, label{rif[q0*:{_}];rifi[q1*:{}]} ls, label{rif[q0*:{_}];rifi[q1*:{}]} ld){
		return cal!=null?cal.takePubView():null;
	}

}

