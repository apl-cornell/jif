/**
 * U = provider
 */

public class Agent[principal U, principal SN]
    where SN actsfor U, {*provider} actsfor U, {*provider} <= {SN <- U} {
  public int{SN<-} today() { return 10; }

  public void happyBirthday{bdayPerson<-bdayUser.friends, U}
      (final principal{SN<-} bdayPerson, User[bdayPerson, SN]{SN<-} bdayUser)
      where SN actsfor bdayPerson, SN actsfor bdayUser.friends {
      if (bdayUser.lbl <= new label {bdayPerson-> ; bdayPerson<-bdayUser.friends}) {
      if (U actsfor bdayUser.friends) {
        if (bdayUser.birthday == today()) {
          bdayUser.wall = bdayUser.wall + "Happy birthday!\n";
        }
      }
    }
  }
  
//  public void happyBirthday{bdayPerson<-bdayUser.friends}
//      (final principal{SN<-} bdayPerson, User[bdayPerson, SN]{SN<-} bdayUser)
//      where SN actsfor bdayPerson, SN actsfor bdayUser.friends {
//    if (bdayUser.lbl <= new label {bdayPerson->bdayUser.friends;
//                                   bdayPerson<-bdayUser.friends}) {
//      if (bdayUser.birthday == today()) {
//        bdayUser.wall = bdayUser.wall + "Happy birthday!\n";
//      }
//    }
//  }

}